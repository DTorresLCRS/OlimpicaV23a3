%ENVIRON T

! VARIABLE GLOBAL PARA PRUEBAS QCONNECT
INTEGER*1 GLOBAL DEBUGQ%,EP.validarPan%

! PARAMETROS PARA CADA FUNCION REGISTRADA
! MATRIZ QUE CONSISTE DE CAMPOS SOLICITADOS,HEADER SOLICITUD,HEADER ENTREGA,HEADER RESPUESTA,LONG TRAMA REQ,LONG TRAMA ANS
STRING TEFII.FUNCT.FTPARAM$(2)
INTEGER*1 TEFII.FUNCT.EQUIVREQFIJDATA%(2)
INTEGER*1 TEFII.FUNCT.EQUIVREQVARDATA%(2)
INTEGER*1 TEFII.FUNCT.EQUIVANSVARDATA%(2)
!INTEGER*1 TEFII.FUNCT.FTPARAMFLAG%	! INDICA SI YA ESTAN CARGADOS ESTOS PARAMETROS

Integer*1 initializationNeeded%

Integer*1 applyPreviousPayment%

String additionalParam$

String fieldsToRestore$

INTEGER*4 TEFII.FUNCT.SERIALTIMEOUT%,TEFII.FUNCT.FINALTIMEOUT%

Integer*2 TEFII.FUNCT.PANINDEX%, TEFII.FUNCT.ANSINDEX%, TEFII.FUNCT.AMTINDEX%, TEFII.FUNCT.RECINDEX%, TEFII.FUNCT.HORINDEX%, TEFII.FUNCT.CONTINUEINDEX%
Integer*2 Global TEFII.FUNCT.TCINDEX%
!
! Campos reservados para índice de bin y últimos 4 dígitos
! Se usan en el caso en el cual el protocolo no tenga campos
! específicos destinados para esta información, sino únicamente
! el campo de pan
Integer*2 TEFII.FUNCT.RESERVEDBININDEX%
Integer*2 TEFII.FUNCT.RESERVEDDIGINDEX%

! Variables para controlar cierres intermedios de puerto serial
Integer*1 portStatus%,isPortDynamic%

! Variable para determinar si la función de sincronización se comporta por demanda de la terminal, o en forma estándar
Integer*1 TEFII.FUNCT.SYNCBYDEMAND%

! FUNCIONES REGISTRADAS
STRING TEFII.FUNCT.FUNCTIONS$(1)
Integer*1 TEFII.FUNCT.FUNCTYPE%(1)
Integer*2 TEFII.FUNCT.FCOUNT%

! CAMPOS DE VALOR CONSTANTE PARA CIERTAS FUNCIONES
String TEFII.FUNCT.CONSTANTS$(3)
Integer*2 TEFII.FUNCT.NCONSTANTS%(1)

! PARAMETROS TEF
INTEGER*2 GLOBAL \ 
	EP.IOPARM%,\
	EP.COM%,\
	EP.SPEED%,\
	EP.DATA.BITS%,\
	EP.STOP.BITS%,\
	EP.MAX.TRIES%,\
	EP.EIAP%
INTEGER*4 GLOBAL \
	EP.SHORT.WAIT%,\
	EP.LONG.WAIT%,\
	EP.CHARS.WAIT%
STRING GLOBAL EP.PARITY$,\
	EP.SERIAL.MISC$,\
	EP.ACTUALNETDESC$,\
	EP.ECR.TRANSNUM$,\
	EP.ECR.TRANSNUM2$,\
	EP.defaultApp$

Function parseError External
	String parseError
End Function

Function getLastSequence External
	String getLastSequence
End Function

Sub readPropData(pFilename$, pPropData$, pSession%, pReturn%) External
	String pFilename$, pPropData$
	Integer*2 pSession%, pReturn%
End Sub

Function getProperty(pProperty$, pData$) External
	String getProperty, pProperty$, pData$
End Function

Sub getNextField(pData$, pLastIndex%, pSeparator$, pNextField$) External
	String pNextField$, pData$, pSeparator$
	Integer*2 pLastIndex%
End Sub

Sub TEFII.FORMAT.setDataAppl(pData$) External
	String pData$
End Sub

FUNCTION TEFII.FORMAT.LPAD$(VALUE$,PADCHAR$,PADLENGTH%) EXTERNAL
	STRING VALUE$,PADCHAR$,TEFII.FORMAT.LPAD$,PADVALUE$
	INTEGER*2 PADLENGTH%
END FUNCTION

FUNCTION TEFII.FORMAT.LTRIM$(VALUE$) EXTERNAL
	STRING VALUE$,TEFII.FORMAT.LTRIM$
END FUNCTION

FUNCTION TEFII.FORMAT.RTRIM$(VALUE$) EXTERNAL
	STRING VALUE$,TEFII.FORMAT.RTRIM$
END FUNCTION

SUB TEFII.FORMAT.PARSEPOSREQ(MESSAGE$,VARDATALEN$) EXTERNAL
	STRING MESSAGE$,VARDATALEN$	
END SUB

FUNCTION APPMGR.COMM.OPENSERIAL%(PORT%,SPEED%,PARITY$,DATABITS%,STOPBITS%,SESSION%,BUFFERSIZE%,MISC$) EXTERNAL
	INTEGER*2 PORT%,SPEED%,DATABITS%,STOPBITS%,SESSION%,BUFFERSIZE%
	INTEGER*1 APPMGR.COMM.OPENSERIAL%
	STRING PARITY$, MISC$
END FUNCTION

SUB APPMGR.COMM.CLOSESERIAL(SESSION%) EXTERNAL
	INTEGER*2 SESSION%
END SUB

FUNCTION APPMGR.COMM.READSERIALACK$(SESSION%,TIMEOUT%,SENDACK%) EXTERNAL
	INTEGER*2 SESSION%,SENDACK%
	INTEGER*4 TIMEOUT%
	STRING APPMGR.COMM.READSERIALACK$
END FUNCTION

SUB TEFII.FORMAT.RESETFIELDS EXTERNAL
END SUB

SUB TEFII.FORMAT.PARSEDATAFMESSAGE(MESSAGE$) EXTERNAL
	STRING MESSAGE$
END SUB

FUNCTION TEFII.FORMAT.GETHEADER$ EXTERNAL
	STRING TEFII.FORMAT.GETHEADER$
END FUNCTION

FUNCTION TEFII.FORMAT.VALIDDATAFMSG%(HEADER$,FIELDS$,HEADERALT$) EXTERNAL
	STRING HEADER$,FIELDS$,HEADERALT$
	INTEGER*1 TEFII.FORMAT.VALIDDATAFMSG%
END FUNCTION

FUNCTION TEFII.FORMAT.GETPOSCODTRX$ EXTERNAL
	STRING TEFII.FORMAT.GETPOSCODTRX$
END FUNCTION

FUNCTION TEFII.FORMAT.GETPOSREQUEST$(INDEX%) EXTERNAL
	INTEGER*1 INDEX%
	STRING TEFII.FORMAT.GETPOSREQUEST$
END FUNCTION

FUNCTION TEFII.FORMAT.GETPOSVARREQUEST$(INDEX%) EXTERNAL
	INTEGER*1 INDEX%
	STRING TEFII.FORMAT.GETPOSVARREQUEST$
END FUNCTION

SUB TEFII.FORMAT.SETPOSVARREQUEST$(INDEX%,pValue$) EXTERNAL
	INTEGER*1 INDEX%
	STRING pValue$
END SUB

FUNCTION TEFII.FORMAT.GETPOSVARANSWER$(INDEX%) EXTERNAL
	INTEGER*1 INDEX%
	STRING TEFII.FORMAT.GETPOSVARANSWER$
END FUNCTION

SUB TEFII.FORMAT.SETHEADER(VALUE$) EXTERNAL
	STRING VALUE$
END SUB

SUB TEFII.FORMAT.SETFIELD(INDEX%,VALUE$) EXTERNAL
	INTEGER*2 INDEX%
	STRING VALUE$
END SUB

FUNCTION TEFII.FORMAT.GETFIELD$(INDEX%) EXTERNAL
	INTEGER*2 INDEX%
	STRING TEFII.FORMAT.GETFIELD$
END FUNCTION

FUNCTION TEFII.FORMAT.FORMATMSGTODATAF$(FLDTOSEND$,FILLFIELDS%) EXTERNAL
	STRING FLDTOSEND$,TEFII.FORMAT.FORMATMSGTODATAF$
	INTEGER*1 FILLFIELDS%
END FUNCTION

FUNCTION APPMGR.COMM.WRITESERIAL%(SESSION%,MESSAGE$,WAITFORACK%) EXTERNAL
	INTEGER*2 SESSION%
	INTEGER*4 WAITFORACK%
	INTEGER*1 APPMGR.COMM.WRITESERIAL%
	STRING MESSAGE$
END FUNCTION

Sub APPMGR.COMM.ACCEPT External
End Sub

Sub APPMGR.COMM.REFUSE External
End Sub

SUB TEFII.FORMAT.SETPOSANSVARMSG(INDEX%,VALUE$,VALUETYPE%,VALUELENGTH%) EXTERNAL
	INTEGER*2 INDEX%,VALUELENGTH%
	INTEGER*1 VALUETYPE%
	STRING VALUE$
END SUB

SUB TEFII.FORMAT.SETPOSAPPL(VALUE$) EXTERNAL
	STRING VALUE$
END SUB

SUB TEFII.FORMAT.SETPOSFUNCT(VALUE$) EXTERNAL
	STRING VALUE$
END SUB

SUB TEFII.FORMAT.SETPOSCODTRX(VALUE$) EXTERNAL
	STRING VALUE$
END SUB

SUB TEFII.FORMAT.SETPOSSTATE(VALUE$) EXTERNAL
	STRING VALUE$
END SUB

FUNCTION TEFII.FORMAT.GETRESPUESTAPARCIAL$(CODAPPL$,CODTRX$,VARMSG$) EXTERNAL
	STRING CODAPPL$,CODTRX$,VARMSG$,TEFII.FORMAT.GETRESPUESTAPARCIAL$
END FUNCTION

FUNCTION TEFII.FORMAT.GETRESPUESTATOTAL$(VARLEN$) EXTERNAL
	STRING VARLEN$,TEFII.FORMAT.GETRESPUESTATOTAL$
END FUNCTION

FUNCTION TEFII.FORMAT.GETSOLDISPLAY$(MESSAGE$,PARAM%,DOPER%,DCLIENTE%) EXTERNAL
	STRING TEFII.FORMAT.GETSOLDISPLAY$,MESSAGE$
	INTEGER*1 DOPER%,DCLIENTE%
END FUNCTION

FUNCTION TEFII.FORMAT.GETBASICFUNCTIONREQUEST$(pIndex%,pParam$) EXTERNAL
	STRING TEFII.FORMAT.GETBASICFUNCTIONREQUEST$,pParam$
	INTEGER*2 pIndex%
END FUNCTION

Function tef.notifyAccount(pBin$) External
	Integer*1 tef.notifyAccount
	String pBin$
End Function

Function disc.validateAmount External
	Integer*1 disc.validateAmount
End Function

FUNCTION TEFII.FORMAT.GETDATAENTRY$(CODIGO$,TIPO$,MESSAGE$) EXTERNAL
	STRING TEFII.FORMAT.GETDATAENTRY$,CODIGO$,TIPO$,MESSAGE$
END FUNCTION

FUNCTION TEFII.FORMAT.GETPOSSTATE$ EXTERNAL
	STRING TEFII.FORMAT.GETPOSSTATE$
END FUNCTION

Sub printDebug(pMsg$) External
	String pMsg$
End Sub

Sub traceApplication(pMsg$, pAppl$) External
	String pMsg$, pAppl$
End Sub

Function tef.getActualNet External
	Integer*2 tef.getActualNet
End Function

Function TEFII.FORMAT.GETSIMPLESTATE(pMsg$) External
	STRING TEFII.FORMAT.GETSIMPLESTATE,pMsg$
End Function

Function TEFII.FORMAT.getPosInput(pMessage$) External
	String pMessage$,TEFII.FORMAT.getPosInput
End Function

Sub EP.DISPLAY.A.MESSAGE(UE.DISP.MESSAGE$) External
	String UE.DISP.MESSAGE$
End Sub

Sub EP.DISPLAY.AN.ERROR(UE.DISP.MESSAGE$) External
	String UE.DISP.MESSAGE$
End Sub

Function TEFII.FORMAT.getMsgType External
	String TEFII.FORMAT.getMsgType
End Function

Function TEFII.FORMAT.getReqFlds External
	String TEFII.FORMAT.getReqFlds
End Function

Sub EP.LINE.PRINT(LINEA$, ESTACION%) External
	String LINEA$
	Integer*2 ESTACION%
End Sub

Sub TEFII.FORMAT.restoreField(pIndex%) External
	Integer*2 pIndex%
End Sub

Sub restoreFields
	String tmpField$
	Integer*2 tmpIndex%
	!
	If Len(fieldsToRestore$) > 0 Then Begin
		Call printDebug("restoreFields(" + fieldsToRestore$ + ")")
		tmpIndex% = 0
		Call getNextField(fieldsToRestore$, tmpIndex%, ",", tmpField$)
		While Len(tmpField$) > 0
			Call TEFII.FORMAT.restoreField( Int%(Val( tmpField$ )) )
			Call getNextField(fieldsToRestore$, tmpIndex%, ",", tmpField$)
		Wend
		fieldsToRestore$ = ""
	Endif
End Sub

Sub refuseTrx
	Integer*2 tmpCounter%
	!
	For tmpCounter% = 1 To 3
		Call APPMGR.COMM.REFUSE
		Wait ; EP.CHARS.WAIT%
	Next tmpCounter%
End Sub

FUNCTION TEFII.FUNCT.OPENPORT%
	INTEGER*1 TEFII.FUNCT.OPENPORT%
	If portStatus% = 0 Or isPortDynamic% <> 0 Then Begin
		Call printDebug("open port with " + \
				str$(EP.COM%) + "," + \
				str$(EP.SPEED%) + "," + \
				EP.PARITY$ + "," + \
				str$(EP.DATA.BITS%) + "," + str$(EP.STOP.BITS%))
		TEFII.FUNCT.OPENPORT% = APPMGR.COMM.OPENSERIAL%(EP.COM%,EP.SPEED%,EP.PARITY$,EP.DATA.BITS%,EP.STOP.BITS%,EP.EIAP%,512,EP.SERIAL.MISC$)
	Endif Else \
		TEFII.FUNCT.OPENPORT% = 0
END FUNCTION

Sub TEFII.FUNCT.CLOSEPORT%
	If portStatus% = 99 Or isPortDynamic% <> 0 Then \
		Call APPMGR.COMM.CLOSESERIAL(EP.EIAP%)
End Sub

Function TEFII.FUNCT.GETPAN Public
	String TEFII.FUNCT.GETPAN
	!
	TEFII.FUNCT.GETPAN = TEFII.FORMAT.GETFIELD$(TEFII.FUNCT.PANINDEX%)
End Function

Function TEFII.FUNCT.ISSYNCBYDEMAND Public
	Integer*1 TEFII.FUNCT.ISSYNCBYDEMAND
	!
	TEFII.FUNCT.ISSYNCBYDEMAND = TEFII.FUNCT.SYNCBYDEMAND%
End Function

Function TEFII.FUNCT.GETANS Public
	String TEFII.FUNCT.GETANS
	!
	TEFII.FUNCT.GETANS = TEFII.FORMAT.GETFIELD$(TEFII.FUNCT.ANSINDEX%)
End Function

Function TEFII.FUNCT.GETAMT Public
	String TEFII.FUNCT.GETAMT
	!
	TEFII.FUNCT.GETAMT = TEFII.FORMAT.GETFIELD$(TEFII.FUNCT.AMTINDEX%)
End Function

Function TEFII.FUNCT.GETAMTINDEX Public
	Integer*2 TEFII.FUNCT.GETAMTINDEX
	!
	TEFII.FUNCT.GETAMTINDEX = TEFII.FUNCT.AMTINDEX%
End Function

Function TEFII.FUNCT.GETREC Public
	String TEFII.FUNCT.GETREC
	!
	TEFII.FUNCT.GETREC = TEFII.FORMAT.GETFIELD$(TEFII.FUNCT.RECINDEX%)
End Function

Function TEFII.FUNCT.GETHOR Public
	String TEFII.FUNCT.GETHOR
	!
	TEFII.FUNCT.GETHOR = TEFII.FORMAT.GETFIELD$(TEFII.FUNCT.HORINDEX%)
End Function

Function TEFII.FUNCT.ISCONTINUE Public
	Integer*1 TEFII.FUNCT.ISCONTINUE
	String tmpContinue$
	!
	If TEFII.FUNCT.CONTINUEINDEX% = -1 Then Begin
		TEFII.FUNCT.ISCONTINUE = 0
	Endif Else Begin
		tmpContinue$ = TEFII.FORMAT.GETFIELD$(TEFII.FUNCT.CONTINUEINDEX%)
		If tmpContinue$ = "" Then Begin
			TEFII.FUNCT.ISCONTINUE = 0
		Endif Else If Val(tmpContinue$) = 1 Then Begin
			TEFII.FUNCT.ISCONTINUE = 1
		Endif Else Begin
			TEFII.FUNCT.ISCONTINUE = 0
		Endif
	Endif
End Function

Sub TEFII.FUNCT.SAVEPARTIALMSG(pMsg$) Public
	String pMsg$
	!
	! TODO: Implementar persistencia de los mensajes parciales
End Sub

Sub TEFII.FUNCT.ASIGNRESERVED(pIndex%, pValue$) Public
	Integer*2 pIndex%
	String pValue$
	!
	If pIndex% = TEFII.FUNCT.PANINDEX% And Len(pValue$) >= 10 Then Begin
		Call TEFII.FORMAT.SETFIELD(TEFII.FUNCT.RESERVEDBININDEX%, Left$(pValue$, 6))
		Call TEFII.FORMAT.SETFIELD(TEFII.FUNCT.RESERVEDDIGINDEX%, Right$(pValue$, 4))
	Endif
End Sub

Function TEFII.FUNCT.getConstant(pIndex%, pField$) Public
	Integer*2 pIndex%, tmpCounter%
	String TEFII.FUNCT.getConstant, pField$
	Integer*1 tmpFound%
	!
	tmpFound% = 0
	tmpCounter% = TEFII.FUNCT.NCONSTANTS%(pIndex%) + 1
	While Not tmpFound% And tmpCounter% <= 20
		If TEFII.FUNCT.CONSTANTS$(pIndex%, tmpCounter%, 0) = pField$ Then \
			tmpFound% = -1 \
		Else \
			tmpCounter% = tmpCounter% + 1
	Wend
	If tmpFound% Then Begin
		TEFII.FUNCT.getConstant = TEFII.FUNCT.CONSTANTS$(pIndex%, tmpCounter%, 1)
	Endif Else Begin
		TEFII.FUNCT.getConstant = ""
	Endif
End Function

Sub TEFII.FUNCT.setConstants(pIndex%)
	Integer*2 pIndex%, tmpCounter%
	Integer*1 tmpEnd%
	!
	tmpEnd% = 0
	tmpCounter% = 0
	While tmpCounter% <= 20 And tmpEnd% = 0
		If TEFII.FUNCT.CONSTANTS$(pIndex%, tmpCounter%, 0) = "" Then \
			tmpEnd% = -1 \
		Else Begin
			Call printDebug("setting constants " + TEFII.FUNCT.CONSTANTS$(pIndex%, tmpCounter%, 0) + " on " + Str$(pIndex%))
			Call printDebug("value = " + TEFII.FUNCT.CONSTANTS$(pIndex%, tmpCounter%, 1)) 
			Call TEFII.FORMAT.SETFIELD(Val(TEFII.FUNCT.CONSTANTS$(pIndex%, tmpCounter%, 0)), TEFII.FUNCT.CONSTANTS$(pIndex%, tmpCounter%, 1))
			tmpCounter% = tmpCounter% + 1
		Endif
	Wend
End Sub

Sub TEFII.FUNCT.assignConstant(pIndex%, pField$, pValue$) Public
	Integer*2 pIndex%, tmpCounter%
	String pField$, pValue$
	Integer*1 tmpFound%
	!
	tmpFound% = 0
	tmpCounter% = TEFII.FUNCT.NCONSTANTS%(pIndex%) + 1
	While Not tmpFound% And tmpCounter% <= 20
		If TEFII.FUNCT.CONSTANTS$(pIndex%, tmpCounter%, 0) = "" Then \
			tmpFound% = -1 \
		Else \
			tmpCounter% = tmpCounter% + 1
	Wend
	If tmpFound% Then Begin
		TEFII.FUNCT.CONSTANTS$(pIndex%, tmpCounter%, 0) = pField$
		TEFII.FUNCT.CONSTANTS$(pIndex%, tmpCounter%, 1) = pValue$
	Endif
End Sub

Sub TEFII.FUNCT.assignConstants(pIndex%, pValue$)
	Integer*2 pIndex%, tmpCounter%, tmpIndex%, tmpLen%
	String pValue$
	!
	tmpCounter% = 0
	tmpIndex% = 1
	While tmpIndex% < Len(pValue$)
		TEFII.FUNCT.CONSTANTS$(pIndex%, tmpCounter%, 0) = Str$(Val(Mid$(pValue$, tmpIndex%, 3)))
		tmpLen% = Int%(Val(Mid$(pValue$, tmpIndex% + 3, 3)))
		TEFII.FUNCT.CONSTANTS$(pIndex%, tmpCounter%, 1) = Mid$(pValue$, tmpIndex% + 6, tmpLen%)
		tmpIndex% = tmpIndex% + 6 + tmpLen%
		tmpCounter% = tmpCounter% + 1
	Wend
	TEFII.FUNCT.NCONSTANTS%(pIndex%) = tmpCounter% - 1
End Sub

Sub TEFII.FUNCT.resetConstants(pIndex%) Public
	Integer*2 pIndex%, tmpCounter%
	!
	For tmpCounter% = TEFII.FUNCT.NCONSTANTS%(pIndex%) + 1 To 20
		TEFII.FUNCT.CONSTANTS$(pIndex%, tmpCounter%, 0) = ""
		TEFII.FUNCT.CONSTANTS$(pIndex%, tmpCounter%, 1) = ""
	Next tmpCounter%
End Sub

Sub readAdditionalParameters
	Integer*2 tmpReturn%
	!
	! Información del archivo de parámetros
	Call readPropData("r::adx_idt1:tefparm.dat", additionalParam$, EP.IOPARM%, tmpReturn%)
End Sub

Function getAdditionalFields(pFunction$)
	String getAdditionalFields, pFunction$, tmpParam$
	!
	tmpParam$ = "TEF.ADDFIELDS." + pFunction$ + "." + Right$(String$(3, "0") + Str$( tef.getActualNet ), 3)
	!
	Call printDebug("getAdditionalFields(" + pFunction$ + ") Param=" + tmpParam$)
	!
	getAdditionalFields = getProperty(tmpParam$, additionalParam$)
End Function

SUB TEFII.FUNCT.INITIALIZEPARAM(pFileName$) Public
	String pFileName$, tmpMsg$
	INTEGER*1 I%,J%,K%,FIN%
	INTEGER*2 PARCIALINT%,PARAMCOUNTER%
	STRING TOTAL$,PARCIAL$
	STRING DATAPARAM$(1), tmpConstants$
	Integer*1 tmpOpen%, tmpDim%, tmpErr%
	Integer*2 tmpCounter1%, tmpCounter2%, tmpCounter3%, tmpCount%
	String tmpLine$, tmpFileName$
	!
	Call ep.line.print("TIIFUNC v.2.0.1 2018-06-09", 2100h)
	!
	Call readAdditionalParameters
	!
	fieldsToRestore$ = ""
	!
	If pFileName$ <> "" Then Begin
		initializationNeeded% = -1
		!Call traceApplication("TEFII.FUNCT.INITIALIZEPARAM(" + pFileName$ + ")", "TIIFUNC")
	Endif Else Begin
		initializationNeeded% = 0
	Endif
	!
	TEFII.FUNCT.RESERVEDBININDEX% = 10
	TEFII.FUNCT.RESERVEDDIGINDEX% = 11
	
	!IF TEFII.FUNCT.FTPARAMFLAG% <> 1 THEN \
	!BEGIN
		! Flag para controlar cierres intermedios de puerto serial
		isPortDynamic% = 0
		!
		tmpErr% = 0
		tmpOpen% = 0
		tmpDim% = 0
		If End # EP.IOPARM% Then initialize.end
		On Error Goto initialize.err
		If pFileName$ = "" Then \
			tmpFileName$ = "R::ADX_IDT1:TEFFUNC." + \
					Right$(String$(3, "0") + Str$(tef.getActualNet), 3) \
		Else \
			tmpFileName$ = pFileName$
		
		!Call printDebug("Initializing parameters from " + tmpFileName$)
		
		tmpMsg$ = "Leyendo parametros  " + tmpFileName$
		
		Call ep.display.a.message(tmpMsg$)
		
		Open tmpFileName$ As EP.IOPARM% NOWRITE NODEL
		tmpOpen% = -1
		tmpCounter3% = 1
		Read # EP.IOPARM% ; Line tmpLine$
		tmpCount% = Int%(Val(Left$(tmpLine$, 2)))
		tmpMsg$ = "No. Funciones: " + Str$(tmpCount%)
		Call ep.display.a.message(tmpMsg$)
		TEFII.FUNCT.FCOUNT% = tmpCount%
		TEFII.FUNCT.SYNCBYDEMAND% = Int%(Val(Mid$(tmpLine$, 3, 1)))
		!
		TEFII.FUNCT.PANINDEX% = Int%(Val(Mid$(tmpLine$, 4, 3)))
		TEFII.FUNCT.ANSINDEX% = Int%(Val(Mid$(tmpLine$, 7, 3)))
		TEFII.FUNCT.AMTINDEX% = Int%(Val(Mid$(tmpLine$,10, 3)))
		TEFII.FUNCT.RECINDEX% = Int%(Val(Mid$(tmpLine$,13, 3)))
		TEFII.FUNCT.HORINDEX% = Int%(Val(Mid$(tmpLine$,16, 3)))
		!
		If Len(tmpLine$) >= 21 Then Begin
			TEFII.FUNCT.TCINDEX% = Int%(Val(Mid$(tmpLine$,19, 3)))
		Endif Else Begin
			TEFII.FUNCT.TCINDEX% = -1
		Endif
		!
		If Len(tmpLine$) >= 24 Then Begin
			TEFII.FUNCT.CONTINUEINDEX% = Int%(Val(Mid$(tmpLine$,22, 3)))
		EndIf Else Begin
			TEFII.FUNCT.CONTINUEINDEX% = -1
		Endif
		!
		tmpMsg$ = "dim arreglos de constantes"
		Call ep.display.a.message(tmpMsg$)
		Dim TEFII.FUNCT.NCONSTANTS%(tmpCount%)
		Dim TEFII.FUNCT.CONSTANTS$(tmpCount%, 20, 1)
		tmpMsg$ = "Dim arreglos de funciones"
		Call ep.display.a.message(tmpMsg$)
		Dim TEFII.FUNCT.FUNCTIONS$(tmpCount%)
		Dim TEFII.FUNCT.FUNCTYPE%(tmpCount%)
		tmpMsg$ = "Dim arreglos de parametros"
		Call ep.display.a.message(tmpMsg$)
		Dim DATAPARAM$(10 * tmpCount%)
		tmpDim% = -1
		!
		tmpMsg$ = "Lee parametros"
		Call ep.display.a.message(tmpMsg$)
		!
		For tmpCounter1% = 1 To tmpCount%
			Read # EP.IOPARM% ; Line TEFII.FUNCT.FUNCTIONS$(tmpCounter1%)
			If Len(TEFII.FUNCT.FUNCTIONS$(tmpCounter1%)) > 4 Then Begin
				TEFII.FUNCT.FUNCTYPE%(tmpCounter1%) = \
					Int%(Val( \
						Right$(TEFII.FUNCT.FUNCTIONS$(tmpCounter1%), Len(TEFII.FUNCT.FUNCTIONS$(tmpCounter1%)) - 4)))
				TEFII.FUNCT.FUNCTIONS$(tmpCounter1%) = Left$(TEFII.FUNCT.FUNCTIONS$(tmpCounter1%), 4)
			Endif
			Read # EP.IOPARM% ; Line tmpConstants$
			Call TEFII.FUNCT.assignConstants(tmpCounter1%, tmpConstants$)
			For tmpCounter2% = 1 To 10
				Read # EP.IOPARM% ; Line DATAPARAM$(tmpCounter3%)
				tmpCounter3% = tmpCounter3% + 1
			Next tmpCounter2%
		Next tmpCounter1%
		!
		Goto initialize.end
		!
		initialize.err:
			tmpErr% = -1
			Call ep.display.an.error("Error " + tmpMsg$)
			Call ep.display.an.error(parseError)
			Resume initialize.end
		initialize.end:
			If tmpOpen% Then Close EP.IOPARM%
			!
			!If pFileName$ <> "" Then Begin
			!	If tmpErr% Then Begin
			!		Call traceApplication("initialize.Error", "TIIFUNC")
			!	Endif Else Begin
			!		Call traceApplication("initialize.OK)", "TIIFUNC")
			!	Endif
			!Endif
			!
			If Not tmpDim% Then Begin
				tmpCount% = 6
				Dim TEFII.FUNCT.FUNCTIONS$(tmpCount%)
				TEFII.FUNCT.FUNCTIONS$(1) = "8511"
				TEFII.FUNCT.FUNCTIONS$(2) = "8521"
				TEFII.FUNCT.FUNCTIONS$(3) = "8512"
				TEFII.FUNCT.FUNCTIONS$(4) = "8549"
				TEFII.FUNCT.FUNCTIONS$(5) = "8551"
				TEFII.FUNCT.FUNCTIONS$(6) = "8502"
				Dim DATAPARAM$(10 * tmpCount%)
			Endif
			While tmpCounter3% <= 10 * tmpCount%
				DATAPARAM$(tmpCounter3%) = "0"
				tmpCounter3% = tmpCounter3% + 1
			Wend
		
		
		!! FUNCIONES REGISTRADAS
		!DIM TEFII.FUNCT.FUNCTIONS$(6)
		!TEFII.FUNCT.FUNCTIONS$(1) = "8511"
		!TEFII.FUNCT.FUNCTIONS$(2) = "8521"
		!TEFII.FUNCT.FUNCTIONS$(3) = "8512"
		!TEFII.FUNCT.FUNCTIONS$(4) = "8549"
		!TEFII.FUNCT.FUNCTIONS$(5) = "8551"
		!TEFII.FUNCT.FUNCTIONS$(6) = "8502"
		!!
		!! EQUIVALENTES DE LOS DATA
		!DIM DATAPARAM$(100)
		!!
		!!PARAMETROS PARA COMPRA CON TARJETA
		!! CAMPOS SOLICITADOS
		!DATAPARAM$(1) = "404180425381828384"
		!! HEADER SOLICITUD DATOS
		!!DATAPARAM$(2) = "5448484848484848484849484848323248"
		!DATAPARAM$(2) = "60000000001000  0"
		!! HEADER ENTREGA DATOS
		!!DATAPARAM$(3) = "5448484848484848484849484848484848"
		!DATAPARAM$(3) = "60000000001000000"
		!! HEADER RESPUESTA
		!!DATAPARAM$(4) = "5448484848484848484849504848484848"
		!DATAPARAM$(4) = "60000000001200000"
		!! LONGITUDES TRAMA REQUEST CAJA
		!DATAPARAM$(5) = "12121212121212"
		!! LONGITUDES TRAMA ANSWER CAJA
		!DATAPARAM$(6) = "060220041008020406060612021010100406"
		!! EQUIVALENCIAS REQUEST FIJO CAJA VS SOLICITUD DATAFONO
		!DATAPARAM$(7) = "00000042530000"
		!! EQUIVALENCIAS REQUEST VARIABLE CAJA VS SOLICITUD DATAFONO
		!DATAPARAM$(8) = "40418083818284"
		!! EQUIVALENCIAS ANSWER CAJA VS SOLICITUD DATAFONO
		!DATAPARAM$(9) = "014800547745510046470044004943500075"
		!! 1 = CONTINUA	0 = FIN DE LOS DATOS
		!DATAPARAM$(10) = "1"
		!!
		!!PARAMETROS PARA COMPRA CON CHEQUE
		!! CAMPOS SOLICITADOS
		!DATAPARAM$(11) = "404253839192"
		!! HEADER SOLICITUD DATOS
		!DATAPARAM$(12) = "60000000001001  0"
		!! HEADER ENTREGA DATOS
		!DATAPARAM$(13) = "60000000001001000"
		!! HEADER RESPUESTA
		!DATAPARAM$(14) = "60000000001201000"
		!! LONGITUDES TRAMA REQUEST CAJA
		!!DATAPARAM$(15) = "12"
		!DATAPARAM$(15) = "12121212"
		!! LONGITUDES TRAMA ANSWER CAJA
		!!DATAPARAM$(16) = "0602201008041206120210101010"
		!DATAPARAM$(16) = "0602201008040606061202101010131007"	! Se agrega No. cuenta, No. cheque y telefono girador
		!! EQUIVALENCIAS REQUEST FIJO CAJA VS SOLICITUD DATAFONO
		!DATAPARAM$(17) = "00000042530000"
		!! EQUIVALENCIAS REQUEST VARIABLE CAJA VS SOLICITUD DATAFONO
		!DATAPARAM$(18) = "40839192"
		!! EQUIVALENCIAS ANSWER CAJA VS SOLICITUD DATAFONO
		!!DATAPARAM$(19) = "014800774500464752440049430050"
		!DATAPARAM$(19) = "0148007745004647004400494300596057"	! Se agrega No. cuenta, No. cheque y telefono girador
		!! 1 = CONTINUA	0 = FIN DE LOS DATOS
		!DATAPARAM$(20) = "1"
		!!
		!!PARAMETROS PARA ANULACION COMPRA CON TARJETA
		!! CAMPOS SOLICITADOS
		!DATAPARAM$(21) = "424353838788"
		!! HEADER SOLICITUD DATOS
		!DATAPARAM$(22) = "60000000001002  0"
		!! HEADER ENTREGA DATOS
		!DATAPARAM$(23) = "60000000001002000"
		!! HEADER RESPUESTA
		!DATAPARAM$(24) = "60000000001202000"
		!! LONGITUDES TRAMA REQUEST CAJA
		!DATAPARAM$(25) = "1206121212"
		!! LONGITUDES TRAMA ANSWER CAJA
		!DATAPARAM$(26) = "060220041008020406060612021010100406"
		!! EQUIVALENCIAS REQUEST FIJO CAJA VS SOLICITUD DATAFONO
		!DATAPARAM$(27) = "00000042530000"
		!! EQUIVALENCIAS REQUEST VARIABLE CAJA VS SOLICITUD DATAFONO
		!DATAPARAM$(28) = "0043838788"
		!! EQUIVALENCIAS ANSWER CAJA VS SOLICITUD DATAFONO
		!DATAPARAM$(29) = "014800547745510046470044004943500075"
		!! 1 = CONTINUA	0 = FIN DE LOS DATOS
		!DATAPARAM$(30) = "1"
		!!
		!! PARAMETROS PARA COMPROBACION ULTIMA TRX
		!! CAMPOS SOLICITADOS
		!DATAPARAM$(31) = "0140434445464749505153545556575859606162636466676869707173747576777879"
		!! HEADER SOLICITUD DATOS
		!DATAPARAM$(32) = ""
		!! HEADER ENTREGA DATOS
		!DATAPARAM$(33) = "60000000001000  0"
		!! HEADER RESPUESTA
		!DATAPARAM$(34) = ""
		!! LONGITUDES TRAMA REQUEST CAJA
		!DATAPARAM$(35) = "1212121212121212120206"
		!! LONGITUDES TRAMA ANSWER CAJA
		!DATAPARAM$(36) = "00"	! LA RESPUESTA DEPENDE DEL TIPO DE TRX OBTENIDA
		!! EQUIVALENCIAS REQUEST FIJO CAJA VS SOLICITUD DATAFONO
		!DATAPARAM$(37) = "00000000000000"
		!! EQUIVALENCIAS REQUEST VARIABLE CAJA VS SOLICITUD DATAFONO
		!DATAPARAM$(38) = ""
		!! EQUIVALENCIAS ANSWER CAJA VS SOLICITUD DATAFONO
		!DATAPARAM$(39) = ""
		!! 1 = CONTINUA	0 = FIN DE LOS DATOS
		!DATAPARAM$(40) = "1"
		!!
		!! PARAMETROS PARA AVANCE
		!! CAMPOS SOLICITADOS
		!DATAPARAM$(41) = "404253839192"
		!! HEADER SOLICITUD DATOS
		!DATAPARAM$(42) = "60000000001007  0"
		!! HEADER ENTREGA DATOS
		!DATAPARAM$(43) = "60000000001007000"
		!! HEADER RESPUESTA
		!DATAPARAM$(44) = "60000000001207000"
		!! LONGITUDES TRAMA REQUEST CAJA
		!DATAPARAM$(45) = "12121212121212"
		!! LONGITUDES TRAMA ANSWER CAJA
		!DATAPARAM$(46) = "060220041008020406060612021010100406"
		!! EQUIVALENCIAS REQUEST FIJO CAJA VS SOLICITUD DATAFONO
		!DATAPARAM$(47) = "00000042530000"
		!! EQUIVALENCIAS REQUEST VARIABLE CAJA VS SOLICITUD DATAFONO
		!DATAPARAM$(48) = "40418083818284"
		!! EQUIVALENCIAS ANSWER CAJA VS SOLICITUD DATAFONO
		!DATAPARAM$(49) = "014800547745510046470044004943500075"
		!! 1 = CONTINUA	0 = FIN DE LOS DATOS
		!DATAPARAM$(50) = "1"
		!!
		!!
		!! PARAMETROS PARA ABONO
		!! CAMPOS SOLICITADOS
		!DATAPARAM$(51) = "40425383919297"
		!! HEADER SOLICITUD DATOS
		!!DATAPARAM$(52) = "60000000001008  0"
		!DATAPARAM$(52) = "60000000001011  0"
		!! HEADER ENTREGA DATOS
		!!DATAPARAM$(53) = "60000000001008000"
		!DATAPARAM$(53) = "60000000001011000"
		!! HEADER RESPUESTA
		!!DATAPARAM$(54) = "60000000001208000"
		!DATAPARAM$(54) = "60000000001211000"
		!! LONGITUDES TRAMA REQUEST CAJA
		!DATAPARAM$(55) = "121219121212"
		!! LONGITUDES TRAMA ANSWER CAJA
		!DATAPARAM$(56) = "0602201008060612101010"
		!! EQUIVALENCIAS REQUEST FIJO CAJA VS SOLICITUD DATAFONO
		!DATAPARAM$(57) = "00000042530000"
		!! EQUIVALENCIAS REQUEST VARIABLE CAJA VS SOLICITUD DATAFONO
		!DATAPARAM$(58) = "404197839192"
		!! EQUIVALENCIAS ANSWER CAJA VS SOLICITUD DATAFONO
		!DATAPARAM$(59) = "0148007745464744494350"
		!! 1 = CONTINUA	0 = FIN DE LOS DATOS
		!DATAPARAM$(60) = "0"
		!!
		! PARAMETROS GENERALES
		TEFII.FUNCT.SERIALTIMEOUT% = EP.SHORT.WAIT%
		TEFII.FUNCT.FINALTIMEOUT% = EP.LONG.WAIT%
		!
		PARAMCOUNTER% = 1
		DIM TEFII.FUNCT.FTPARAM$(tmpCount%, 6)
		DIM TEFII.FUNCT.EQUIVREQFIJDATA%(tmpCount%, 7)
		DIM TEFII.FUNCT.EQUIVREQVARDATA%(tmpCount%, 20)
		DIM TEFII.FUNCT.EQUIVANSVARDATA%(tmpCount%, 20)
		!
		! Inicializa equivalencias de campos en -1
		For I% = 0 To tmpCount%
			For J% = 0 To 20
				TEFII.FUNCT.EQUIVANSVARDATA%(I%, J%) = -1
			Next J%
		Next I%
		!
		FIN% = 1
		I% = 1
		WHILE FIN% = 1
			! LECTURA DE CAMPOS
			TEFII.FUNCT.FTPARAM$(I%,1) = DATAPARAM$(PARAMCOUNTER%)
			PARAMCOUNTER% = PARAMCOUNTER% + 1
			!
			! LECTURA DE HEADER
			FOR J% = 2 TO 4
				TEFII.FUNCT.FTPARAM$(I%,J%) = DATAPARAM$(PARAMCOUNTER%)
				PARAMCOUNTER% = PARAMCOUNTER% + 1
			NEXT J%
			!
			! LECTURA DE LONGITUDES TRAMA REQUEST
			TEFII.FUNCT.FTPARAM$(I%,5) = DATAPARAM$(PARAMCOUNTER%)
			PARAMCOUNTER% = PARAMCOUNTER% + 1
			!
			! LECTURA DE LONGITUDES TRAMA ANSWER
			TEFII.FUNCT.FTPARAM$(I%,6) = DATAPARAM$(PARAMCOUNTER%)
			PARAMCOUNTER% = PARAMCOUNTER% + 1
			!
			! LECTURA DE EQUIVALENCIAS REQUEST FIJO CAJA VS SOLICITUD DATAFONO
			FOR J% = 1 TO 7
				TEFII.FUNCT.EQUIVREQFIJDATA%(I%,J%) = VAL(MID$(DATAPARAM$(PARAMCOUNTER%),2*J%-1,2))
			NEXT J%
			PARAMCOUNTER% = PARAMCOUNTER% + 1
			!
			! LECTURA DE EQUIVALENCIAS REQUEST VARIABLE CAJA VS SOLICITUD DATAFONO
			FOR J% = 1 TO LEN(TEFII.FUNCT.FTPARAM$(I%,5))/2
				TEFII.FUNCT.EQUIVREQVARDATA%(I%,J%) = VAL(MID$(DATAPARAM$(PARAMCOUNTER%),2*J%-1,2))
			NEXT J%
			PARAMCOUNTER% = PARAMCOUNTER% + 1
			!
			! LECTURA DE EQUIVALENCIAS ANSWER VARIABLE CAJA VS RESPUESTA DATAFONO
			FOR J% = 1 TO LEN(TEFII.FUNCT.FTPARAM$(I%,6))/2
				TEFII.FUNCT.EQUIVANSVARDATA%(I%,J%) = VAL(MID$(DATAPARAM$(PARAMCOUNTER%),2*J%-1,2))
			NEXT J%
			PARAMCOUNTER% = PARAMCOUNTER% + 1
			!
			I% = I% + 1
			FIN% = VAL(DATAPARAM$(PARAMCOUNTER%))
			PARAMCOUNTER% = PARAMCOUNTER% + 1
		WEND
		!TEFII.FUNCT.FTPARAMFLAG% = 1
	!ENDIF
	!
END SUB

FUNCTION TEFII.FUNCT.GETANSWERVARLEN%(INDEX%,FUNNUMBER%)
	INTEGER*1 INDEX%,FUNNUMBER%,TEFII.FUNCT.GETANSWERVARLEN%
	STRING STRLEN$
	STRLEN$ = TEFII.FUNCT.FTPARAM$(FUNNUMBER%,6)
	TEFII.FUNCT.GETANSWERVARLEN% = VAL(MID$(STRLEN$,2*INDEX%-1,2))
END FUNCTION

SUB TEFII.FUNCT.PREPMSGTODATAF(FUNNUMBER%)
	INTEGER*1 FUNNUMBER%,I%,FIELDNUMBER%
	STRING FIELDVALUE$
	! HEADER
	CALL TEFII.FORMAT.SETHEADER(TEFII.FUNCT.FTPARAM$(FUNNUMBER%,3))
	IF FUNNUMBER% = 4 THEN \
	BEGIN
		! LIMPIA TODOS LOS DATOS A ENVIAR
		FOR I% = 1 TO LEN(TEFII.FUNCT.FTPARAM$(FUNNUMBER%,1)) STEP 2
			FIELDNUMBER% = VAL(MID$(TEFII.FUNCT.FTPARAM$(FUNNUMBER%,1),I%,2))
			CALL TEFII.FORMAT.SETFIELD(FIELDNUMBER%,"")
		NEXT I%
	ENDIF \
	ELSE \
	BEGIN
		! DATOS QUE EXTRAE DE LA PARTE FIJA DEL MENSAJE DE LA CAJA 
		FOR I% = 1 TO 7
			FIELDNUMBER% = TEFII.FUNCT.EQUIVREQFIJDATA%(FUNNUMBER%,I%)
			IF FIELDNUMBER% > 0 THEN \
			BEGIN
				FIELDVALUE$ = TEFII.FORMAT.GETPOSREQUEST$(I%) 
				CALL TEFII.FORMAT.SETFIELD(FIELDNUMBER%,FIELDVALUE$)
			ENDIF
		NEXT I%
		! DATOS QUE EXTRAE DE LA PARTE VARIABLE DEL MENSAJE DE LA CAJA
		FOR I% = 1 TO 20
			FIELDNUMBER% = TEFII.FUNCT.EQUIVREQVARDATA%(FUNNUMBER%,I%)
			IF FIELDNUMBER% > 0 THEN \
			BEGIN
				FIELDVALUE$ = TEFII.FORMAT.GETPOSVARREQUEST$(I%)
				CALL TEFII.FORMAT.SETFIELD(FIELDNUMBER%,FIELDVALUE$)
			ENDIF
		NEXT I%
	ENDIF
END SUB

SUB TEFII.FUNCT.PREPMSGTOCAJA(FUNNUMBER%)
	INTEGER*1 FUNNUMBER%,I%,FIELDNUMBER%
	STRING FIELDVALUE$
	FOR I% = 1 TO 20
		FIELDNUMBER% = TEFII.FUNCT.EQUIVANSVARDATA%(FUNNUMBER%,I%)
		IF FIELDNUMBER% >= 0 THEN \
		BEGIN
			FIELDVALUE$ = TEFII.FORMAT.GETFIELD$(FIELDNUMBER%)
			CALL TEFII.FORMAT.SETPOSANSVARMSG(I%,FIELDVALUE$,0,TEFII.FUNCT.GETANSWERVARLEN%(I%,FUNNUMBER%))
		ENDIF
	NEXT I%
END SUB

SUB TEFII.FUNCT.ADDTRAMA(FUNNUMBER%)
	! HORA DE LA TRANSACCION - CONCATENARLE 00 PORQUE VIENE DE 4 CH
	INTEGER*1 FUNNUMBER%
	INTEGER*1 POSHORA%,POSPROC%,POSCTA%,POSHORATARJ%,POSHORACHEQ%,POSPROCTARJ%,POSPROCCHEQ%,POSCTATARJ%,POSCTACHEQ%
	STRING TMPFIELD$
	! POSICIONES SEGUN LA FUNCION
	POSHORATARJ%=10
	POSHORACHEQ%=8
	POSPROCTARJ%=11
	POSPROCCHEQ%=9
	POSCTATARJ%=16
	POSCTACHEQ%=15
	IF FUNNUMBER% = 2 THEN \
	BEGIN
		POSHORA% = POSHORACHEQ%
		POSPROC% = POSPROCCHEQ%
		POSCTA% = POSCTACHEQ%
	ENDIF \
	ELSE \
	BEGIN
		POSHORA% = POSHORATARJ%
		POSPROC% = POSPROCTARJ%
		POSCTA% = POSCTATARJ%		
	ENDIF
	!
	TMPFIELD$ = TEFII.FORMAT.GETPOSVARANSWER$(POSHORA%)
	CALL TEFII.FORMAT.SETPOSANSVARMSG(POSHORA%,LEFT$(TMPFIELD$,4)+"00",0,TEFII.FUNCT.GETANSWERVARLEN%(POSHORA%,FUNNUMBER%))
	! CODIGO DE PROCESO
	TMPFIELD$ = LEFT$(TEFII.FORMAT.GETPOSVARANSWER$(POSCTA%),2)
	IF TMPFIELD$ = "DB" THEN TMPFIELD$ = "1000" ELSE \
	IF TMPFIELD$ = "CR" THEN TMPFIELD$ = "3000" ELSE \
	TMPFIELD$ = "2000"
	IF FUNNUMBER% = 1 OR FUNNUMBER% = 2 THEN TMPFIELD$ = "00" + TMPFIELD$ ELSE \
	IF FUNNUMBER% = 3 THEN TMPFIELD$ = "20" + TMPFIELD$ ELSE \
	TMPFIELD$ = "31" + TMPFIELD$
	CALL TEFII.FORMAT.SETPOSANSVARMSG(POSPROC%,TMPFIELD$,0,TEFII.FUNCT.GETANSWERVARLEN%(POSPROC%,FUNNUMBER%))
END SUB

FUNCTION TEFII.FUNCT.GETDATAENTRY$
	STRING TEFII.FUNCT.GETDATAENTRY$
	STRING CUERPO$
	CUERPO$ = \
		STRING$(10,"0") + \								! FILLER 10
		STRING$(8,"0") + \								! FILLER 8
		STRING$(2,"0") + \								! FILLER 2
		MID$(TEFII.FORMAT.GETPOSREQUEST$(6),3,4) + \				! FECHA POSTEO
		STRING$(6," ") + \								! CODIGO DE PROCESO
		STRING$(4,"0") + \								! FILLER 4
		STRING$(6,"0") + \								! FILLER 6
		RIGHT$(TEFII.FORMAT.GETPOSVARREQUEST$(1),10) + \			! VALOR 1 DE LA TRAMA VARIABLE
		RIGHT$(TEFII.FORMAT.GETPOSVARREQUEST$(2),10) + \			! VALOR 2 DE LA TRAMA VARIABLE
		TEFII.FORMAT.GETPOSREQUEST$(6) + \						! FECHA HORA INICIO TRX
		STRING$(8,"0") + \								! FILLER 8
		STRING$(12,"0") + \								! FILLER 12
		STRING$(2,"0") + \								! FILLER 2
		STRING$(2," ") + \								! MEDIO DE PAGO
		TEFII.FORMAT.GETPOSCODTRX$ + \						! CODIGO DE CONTROL
		STRING$(3,"0") 									! FILLER 3
	TEFII.FUNCT.GETDATAENTRY$ = CUERPO$
END FUNCTION

FUNCTION TEFII.FUNCT.GETFNFROMHEADER%(HEADER$)
	STRING HEADER$,ANSWER$
	INTEGER*1 TEFII.FUNCT.GETFNFROMHEADER%,I%,J%
	ANSWER$ = ""
	I% = 1
	J% = 0
	WHILE J% = 0 AND I% < 6
		IF HEADER$ = TEFII.FUNCT.FTPARAM$(I%,4) THEN J% = I%
		I% = I% + 1
	WEND
	TEFII.FUNCT.GETFNFROMHEADER% = J%
END FUNCTION

FUNCTION TEFII.FUNCT.ISANULACION%(FN$)
	STRING FN$
	INTEGER*1 TEFII.FUNCT.ISANULACION%,ANSWER%
	IF FN$ = "12" OR FN$ = "14" THEN ANSWER% = 1 ELSE ANSWER% = 0
	TEFII.FUNCT.ISANULACION% = ANSWER%
END FUNCTION

FUNCTION TEFII.FUNCT.CHKULTTRX%(FDATAFONO$)
	INTEGER*1 TEFII.FUNCT.CHKULTTRX%,ANSWER%
	STRING FDATAFONO$,FCAJA$,RCAJA$,RDATAFONO$
	INTEGER*4 VCAJA%,VDATAFONO%
	
	INTEGER*1 RCAJATEMP%	
	
	ON ERROR GOTO ERRORTRAP
	FCAJA$ = TEFII.FORMAT.GETPOSVARREQUEST$(10)
	Call printDebug("FDATAFONO$="+FDATAFONO$)
	Call printDebug("FCAJA$="+FCAJA$)
	ANSWER% = 1
	! CHEQUEO DE FUNCION
	IF FCAJA$ <> FDATAFONO$ AND \
		(TEFII.FUNCT.ISANULACION%(FCAJA$) = 0 OR TEFII.FUNCT.ISANULACION%(FDATAFONO$) = 0) THEN \
		ANSWER% = 0 \
	ELSE \
	BEGIN
		! CHEQUEO DE NUMERO DE RECIBO
		RCAJA$ = TEFII.FORMAT.GETPOSVARREQUEST$(11)	! RECIBO SEGUN CAJA
		Call printDebug("RCAJA$="+RCAJA$)
		IF RCAJA$ = "" OR RCAJA$ = "      " THEN RCAJA$ = "0"
		RDATAFONO$ = TEFII.FUNCT.GETREC		! RECIBO SEGUN DATAFONO
		Call printDebug("RDATAFONO$="+RDATAFONO$)
		RCAJATEMP%=Val(RCAJA$)
		GOTO FINCATH
		ERRORTRAP:
			RCAJA$ = "000000"
!			Call EP.LINE.PRINT("ENTRO AL ERRORTRAP:",4100H)
		FINCATH:
		ON ERROR GOTO ERRORTRAP2		
		RCAJATEMP%=VAL(RDATAFONO$)
		IF VAL(RCAJA$) <> 0 AND TEFII.FUNCT.ISANULACION%(FDATAFONO$) = 0 AND RCAJA$ = RDATAFONO$ Then \
		BEGIN
				ANSWER% = 0 
!				Call EP.LINE.PRINT("DENTRO DEL PRIMERS IF->"+RCAJA$,4100H)				
		ENDIF \
		Else If VAL(RCAJA$) <> 0 AND TEFII.FUNCT.ISANULACION%(FDATAFONO$) = 1 AND EP.ECR.TRANSNUM2$ <> RDATAFONO$ Then \
			BEGIN
					ANSWER% = 0 
			ENDIF \		
		ELSE \
		BEGIN
			! CHEQUEO DE MONTO
			VCAJA% = VAL(TEFII.FORMAT.RTRIM$(TEFII.FORMAT.LTRIM$(TEFII.FORMAT.GETPOSVARREQUEST$(1))))
			VDATAFONO% = VAL(TEFII.FORMAT.RTRIM$(TEFII.FORMAT.LTRIM$(TEFII.FUNCT.GETAMT)))
			Call printDebug("VCAJA%="+str$(VCAJA%))
			Call printDebug("VDATAFONO%="+str$(VDATAFONO%))
			If VCAJA% <> VDATAFONO% THEN ANSWER% = 0
		ENDIF
	ENDIF
	GOTO FINISHFNT
	ERRORTRAP2:
		ANSWER% = 0
	FINISHFNT:
	TEFII.FUNCT.CHKULTTRX% = ANSWER%
END FUNCTION

Function addFields(pFields$, pData$)
	String addFields, pFields$, pData$, tmpAnswer$
	Integer*2 tmpCounter1%, tmpCounter2%, tmpLen1%, tmpLen2%, tmpField1%, tmpField2%
	!
	tmpAnswer$ = ""
	tmpCounter1% = 1
	tmpCounter2% = 1
	tmpLen1% = Len(pFields$)
	tmpLen2% = Len(pData$)
	!
	While tmpCounter1% < tmpLen1% Or tmpCounter2% < tmpLen2%
		If tmpCounter1% < tmpLen1% Then Begin
			tmpField1% = Int%(Val(Mid$(pFields$, tmpCounter1%, 2)))
		Endif Else Begin
			tmpField1% = 9999
		Endif
		If tmpCounter2% < tmpLen2% Then Begin
			tmpField2% = Int%(Val(Mid$(pData$, tmpCounter2%, 2)))
		Endif Else Begin
			tmpField2% = 9999
		Endif
		If tmpField1% < tmpField2% Then Begin
			tmpAnswer$ = tmpAnswer$ + Mid$(pFields$, tmpCounter1%, 2)
			tmpCounter1% = tmpCounter1% + 2
		Endif Else Begin
			tmpAnswer$ = tmpAnswer$ + Mid$(pData$, tmpCounter2%, 2)
			tmpCounter2% = tmpCounter2% + 2
		Endif
	Wend
	!
	addFields = tmpAnswer$
End Function

FUNCTION TEFII.FUNCT.TRX01$(TRAMA$,FUNNUMBER%, pNotifyAcc%) Public
	STRING TRAMA$,TEFII.FUNCT.TRX01$,MENSAJEDATAF$
	INTEGER*1 pNotifyAcc%, ANSWERSERIAL%,FUNNUMBER%,COUNTER%,ERRORCOUNTER%,tmpCounter%,tmpCounter1%,tmpCounter2%,tmpValidate%,tmpPrevData%
	STRING ESTADO$,tmpReq$,tmpPan$
	Integer*1 tmpContinue%
	String tmpApplFunc$, tmpReqFields$
	!
	DEBUGQ% = 0
	!
	Call printDebug("Req:"+TRAMA$)
	!
	tmpApplFunc$ = Left$(TRAMA$, 4)
	!
	! INICIALIZA PARAMETROS SI ES NECESARIO
	!CALL TEFII.FUNCT.INITIALIZEPARAM
	!
	ESTADO$ = TEFII.FORMAT.GETSIMPLESTATE(TRAMA$)
	Call printDebug("Estado:" + ESTADO$)
	IF ESTADO$ = "00" THEN \	! INICIO DE TRANSACCION
		Call TEFII.FORMAT.RESETFIELDS
	!
	! PARSE TRAMA
	CALL TEFII.FORMAT.PARSEPOSREQ(TRAMA$,TEFII.FUNCT.FTPARAM$(FUNNUMBER%,5))
	ESTADO$ = TEFII.FORMAT.GETPOSSTATE$
	!
	! EVALUACION DE ESTADOS
	IF ESTADO$ = "00" THEN \	! INICIO DE TRANSACCION
	BEGIN
		Call printDebug("initializationNeeded% = " + Str$(initializationNeeded%))
		If initializationNeeded% Then Begin
			Call TEFII.FUNCT.INITIALIZEPARAM("")
		Endif
		!
		Call TEFII.FUNCT.setConstants(FUNNUMBER%)
		!
		If applyPreviousPayment% Then Begin
			Call TEFII.FORMAT.SETPOSSTATE("23")
			TRAMA$ = TEFII.FORMAT.GETDATAENTRY$(\
				"8", \
				"01", \
				TEFII.FUNCT.GETDATAENTRY$ \
			)
		Endif Else Begin
			! Valida el monto contra posibles descuentos comprometidos
			If Not disc.validateAmount Then Begin
				! El monto no corresponde
				CALL TEFII.FORMAT.SETPOSSTATE("99")
				TRAMA$ = TEFII.FORMAT.GETRESPUESTAPARCIAL$("2","u","")
			Endif Else Begin
				CALL TEFII.FORMAT.SETPOSSTATE("15")
				TRAMA$ = TEFII.FORMAT.GETSOLDISPLAY$("ABRIENDO PUERTO SERIAL",1,1,1)
			Endif
		Endif
	ENDIF \
	ELSE IF ESTADO$ = "15" THEN \	! PREPARACION TRX
	BEGIN
		! INTENTA ABRIR PUERTO SERIAL
		!ANSWERSERIAL% = APPMGR.COMM.OPENSERIAL%(TEFII.FUNCT.SERIALPORT%,TEFII.FUNCT.SERIALSPEED%,"N",8,1,TEFII.FUNCT.SERIALSESSION%,247)
		portStatus% = 0
		ANSWERSERIAL% = TEFII.FUNCT.OPENPORT%
		IF ANSWERSERIAL% = 0 THEN \
		BEGIN
			! PUERTO SERIAL ABIERTO CON EXITO
			portStatus% = 1
			If TEFII.FUNCT.FUNCTYPE%(FUNNUMBER%) = 3 Then Begin
				! En funcion tipo 3 la caja pasa directamente a esperar
				! la respuesta final
				CALL TEFII.FORMAT.SETPOSSTATE("23")
				TRAMA$ = TEFII.FORMAT.GETSOLDISPLAY$("     ESPERANDO         AUTORIZACION ....",1,1,1)
			Endif Else If TEFII.FUNCT.FUNCTYPE%(FUNNUMBER%) = 4 Then Begin
				Call TEFII.FORMAT.SETPOSSTATE("16")
				TRAMA$ = TEFII.FORMAT.GETSOLDISPLAY$(" ENVIANDO HEADER     AL DATAFONO ...",1,1,1)
			Endif Else If FUNNUMBER% = 4 Or TEFII.FUNCT.FUNCTYPE%(FUNNUMBER%) > 0 Then Begin 	! SOLICITUD DE ULTIMA TRX
				If FUNNUMBER% <> 4 Or TEFII.FUNCT.SYNCBYDEMAND% = 1 Then Begin 	! POR DEMANDA DE LA TERMINAL
					CALL TEFII.FORMAT.SETPOSSTATE("22")
					TRAMA$ = TEFII.FORMAT.GETSOLDISPLAY$(" ENVIANDO RESPUESTA  AL DATAFONO ...",1,1,1)
				Endif Else Begin
					CALL TEFII.FORMAT.SETPOSSTATE("23")
					TRAMA$ = TEFII.FORMAT.GETSOLDISPLAY$("ESPERANDO SINCRONIZ DATAFONO " + EP.ACTUALNETDESC$,1,1,1)					
				Endif
			Endif \
			ELSE \
			BEGIN
				CALL TEFII.FORMAT.SETPOSSTATE("20")
				If FUNNUMBER% = 6 Then \
					TRAMA$ = TEFII.FORMAT.GETSOLDISPLAY$(" SELECCIONE MENU EN       DATAFONO",1,1,1) \
				Else Begin
					TRAMA$ = TEFII.FORMAT.GETSOLDISPLAY$("ESPERANDO SOLICITUD DATAFONO " + EP.ACTUALNETDESC$,1,1,1)
				Endif
			ENDIF
		ENDIF \
		ELSE \
		BEGIN
			! NO SE PUEDE ABRIR EL PUERTO SERIAL
			CALL TEFII.FORMAT.SETPOSSTATE("99")
			TRAMA$ = TEFII.FORMAT.GETRESPUESTAPARCIAL$("2","2","")
		ENDIF
	ENDIF \
	Else If ESTADO$ = "16" Then Begin
		! Para tipo de integración 4, se envía únicamente el encabezado
		! al datáfono y se espera por el mensaje inicial proveniente de éste
		Call TEFII.FORMAT.SETHEADER(TEFII.FUNCT.FTPARAM$(FUNNUMBER%, 2))
		MENSAJEDATAF$ = TEFII.FORMAT.FORMATMSGTODATAF$("", 0)
		! VUELVE A ABRIR EL PUERTO
		ANSWERSERIAL% = TEFII.FUNCT.OPENPORT%
		If ANSWERSERIAL% <> 0 Then Begin
			! NO SE PUEDE ABRIR EL PUERTO SERIAL
			Call TEFII.FORMAT.SETPOSSTATE("99")
			TRAMA$ = TEFII.FORMAT.GETRESPUESTAPARCIAL$("2","2","")
		Endif Else Begin
			! ENVIA LA INFORMACION PEDIDA AL DATAFONO
			Call EP.DISPLAY.A.MESSAGE("Pausa " + Str$(EP.CHARS.WAIT%))
			WAIT ; EP.CHARS.WAIT%
			Call EP.DISPLAY.A.MESSAGE("   ENVIANDO DATOS      AL DATAFONO...")
			!
			Call traceApplication("w:" + MENSAJEDATAF$, "TIIFUNC")
			!
			ANSWERSERIAL% = APPMGR.COMM.WRITESERIAL%(EP.EIAP%,MENSAJEDATAF$,TEFII.FUNCT.SERIALTIMEOUT%)
			! CIERRA EL PUERTO
			Call TEFII.FUNCT.CLOSEPORT%
			If ANSWERSERIAL% = 0 Then Begin
				! EL DATAFONO RECIBIO LA INFORMACION SOLICITADA
				Call TEFII.FORMAT.SETPOSSTATE("21")
				TRAMA$ = TEFII.FORMAT.GETSOLDISPLAY$("ANALIZANDO SOLICITUDDEL DATAFONO.....",1,1,1)
			Endif Else Begin
				! NO SE RECIBIO CONFIRMACION DE ENVIO DE LA INFORMACION PEDIDA
				Call TEFII.FORMAT.SETPOSSTATE("99")	
				TRAMA$ = TEFII.FORMAT.GETRESPUESTAPARCIAL$("2","D","")
			Endif
		Endif
	Endif ELSE IF ESTADO$ = "20" THEN \	! PROCESO TRX
	BEGIN
		! ESPERA POR SOLICITUD DEL DATAFONO
		MENSAJEDATAF$ = APPMGR.COMM.READSERIALACK$(EP.EIAP%,TEFII.FUNCT.SERIALTIMEOUT%,0)
		!
		Call traceApplication("r:" + MENSAJEDATAF$, "TIIFUNC")
		!
		! CIERRA EL PUERTO
		!CALL APPMGR.COMM.CLOSESERIAL(EP.EIAP%)
		Call TEFII.FUNCT.CLOSEPORT%
		IF MENSAJEDATAF$ <> "" THEN \
		BEGIN
			! SE RECIBIO SOLICITUD DEL DATAFONO CON EXITO
!			OPEN "ANDISPLAY:" AS 1
!			FOR COUNTER% = 1 TO LEN(MENSAJEDATAF$)
!				CLEARS 1
!				WRITE #1 ; "#"+STR$(COUNTER%)+": "+STR$(ASC(MID$(MENSAJEDATAF$,COUNTER%,1)))
!				WAIT ; 5000
!			NEXT COUNTER%
!			CLOSE 1
			CALL TEFII.FORMAT.SETPOSSTATE("21")
			TRAMA$ = TEFII.FORMAT.GETSOLDISPLAY$("ANALIZANDO SOLICITUDDEL DATAFONO.....",1,1,1)
		ENDIF \
		ELSE \
		BEGIN
			! NO SE RECIBIO SOLICITUD DEL DATAFONO
			CALL TEFII.FORMAT.SETPOSSTATE("99")
			TRAMA$ = TEFII.FORMAT.GETRESPUESTAPARCIAL$("2","D","")
		ENDIF		
	ENDIF \
	ELSE IF ESTADO$ = "21" THEN \	! PROCESO1 TRX
	BEGIN
		! Flag para indicar si se han solicitado datos previos
		! por parte del datáfono
		tmpPrevData% = 0
		!
		! PARSE DE LA TRAMA DEL DATAFONO
		CALL TEFII.FORMAT.PARSEDATAFMESSAGE(MENSAJEDATAF$)
		
		Call printDebug("TEFII.FORMAT.getMsgType = " + TEFII.FORMAT.getMsgType)
		Call printDebug("TEFII.FORMAT.getReqFlds = " + TEFII.FORMAT.getReqFlds)
		
		! Si el tipo de mensaje es 99 quiere decir que se están solicitando datos previos
		tmpValidate% = 0
		While tmpValidate% <= 0 And TEFII.FORMAT.getMsgType = "99"
			If tmpValidate% = 0 Then Begin
				Call TEFII.FUNCT.PREPMSGTODATAF(FUNNUMBER%)
				! VUELVE A ABRIR EL PUERTO
				ANSWERSERIAL% = TEFII.FUNCT.OPENPORT%
				If ANSWERSERIAL% <> 0 Then Begin
					! NO SE PUEDE ABRIR EL PUERTO SERIAL
					Call TEFII.FORMAT.SETPOSSTATE("99")
					TRAMA$ = TEFII.FORMAT.GETRESPUESTAPARCIAL$("2","2","")
					tmpValidate% = 99
				Endif Else Begin
					tmpValidate% = -1
				Endif
			Endif Else Begin
				! En caso de que vuelva a entrar el ciclo
				! es necesario inicializar el header
				Call TEFII.FORMAT.SETHEADER(TEFII.FUNCT.FTPARAM$(FUNNUMBER%, 3))
			Endif
			!
			Call printDebug("tmpValidate% = " + Str$(tmpValidate%))
			!
			If tmpValidate% = -1 Then Begin
				tmpPrevData% = -1
				!
				Call APPMGR.COMM.ACCEPT
				tmpReqFields$ = getAdditionalFields( tmpApplFunc$ )
				If Len( tmpReqFields$ ) > 0 Then Begin
					tmpReqFields$ = addFields(tmpReqFields$, TEFII.FORMAT.getReqFlds)
				Endif Else Begin
					tmpReqFields$ = TEFII.FORMAT.getReqFlds
				Endif
				MENSAJEDATAF$ = TEFII.FORMAT.FORMATMSGTODATAF$(tmpReqFields$, 1)
				! ENVIA LA INFORMACION PEDIDA AL DATAFONO
				Call EP.DISPLAY.A.MESSAGE("Pausa " + Str$(EP.CHARS.WAIT%))
				WAIT ; EP.CHARS.WAIT%
				Call EP.DISPLAY.A.MESSAGE("   ENVIANDO DATOS      AL DATAFONO...")
				!
				Call traceApplication("w:" + MENSAJEDATAF$, "TIIFUNC")
				!
				ANSWERSERIAL% = APPMGR.COMM.WRITESERIAL%(EP.EIAP%, MENSAJEDATAF$, TEFII.FUNCT.SERIALTIMEOUT%)
				If ANSWERSERIAL% <> 0 Then Begin
					! NO SE RECIBIO CONFIRMACION DE ENVIO DE LA INFORMACION PEDIDA
					Call TEFII.FORMAT.SETPOSSTATE("99")	
					TRAMA$ = TEFII.FORMAT.GETRESPUESTAPARCIAL$("2","D","")
					tmpValidate% = 99
				Endif Else Begin
					MENSAJEDATAF$ = APPMGR.COMM.READSERIALACK$(EP.EIAP%,TEFII.FUNCT.SERIALTIMEOUT%,0)
					!
					Call traceApplication("r:" + MENSAJEDATAF$, "TIIFUNC")
					!
					If MENSAJEDATAF$ = "" Then Begin
						! NO SE RECIBIO SOLICITUD DEL DATAFONO
						Call TEFII.FORMAT.SETPOSSTATE("99")
						TRAMA$ = TEFII.FORMAT.GETRESPUESTAPARCIAL$("2","D","")
						tmpValidate% = 99
					Endif Else Begin
						Call TEFII.FORMAT.PARSEDATAFMESSAGE(MENSAJEDATAF$)
					Endif
				Endif
			Endif
		Wend
		If tmpValidate% = -1 Then Begin
			Call TEFII.FUNCT.CLOSEPORT%
			tmpValidate% = 0
		Endif
		
		If tmpValidate% = 0 Then Begin
			! Informa sobre el bin
			tmpPan$ = TEFII.FUNCT.GETPAN
			If tmpPan$ <> "" And pNotifyAcc% <> 0 Then Begin
				tmpValidate% = tef.notifyAccount(tmpPan$)
			Endif Else \
				tmpValidate% = 1
			
			If tmpValidate% = 1 Then Begin
				! VERIFICA QUE LA TRAMA COINCIDA CON LA ESPERADA
				!If FUNNUMBER% = 5 Then \ ! Avance
				!	tmpValidate% = TEFII.FORMAT.VALIDDATAFMSG%(TEFII.FUNCT.FTPARAM$(FUNNUMBER%,2),TEFII.FUNCT.FTPARAM$(FUNNUMBER%,1),\
				!		TEFII.FUNCT.FTPARAM$(1,2)) \
				!Else \
				!	tmpValidate% = TEFII.FORMAT.VALIDDATAFMSG%(TEFII.FUNCT.FTPARAM$(FUNNUMBER%,2),TEFII.FUNCT.FTPARAM$(FUNNUMBER%,1),"")
				!
				tmpValidate% = TEFII.FORMAT.VALIDDATAFMSG%(TEFII.FUNCT.FTPARAM$(FUNNUMBER%,2),TEFII.FUNCT.FTPARAM$(FUNNUMBER%,1),"")
				!
				IF tmpValidate% = 1 THEN \
				BEGIN
					! EL MENSAJE DEL DATAFONO ES CORRECTO SEGUN LO ESPERADO
					Call APPMGR.COMM.ACCEPT
					CALL TEFII.FORMAT.SETPOSSTATE("10")
					TRAMA$ = TEFII.FORMAT.GETSOLDISPLAY$("   ENVIANDO DATOS      AL DATAFONO...",1,1,1)
				ENDIF \
				ELSE \
				BEGIN
					! EL MENSAJE DEL DATAFONO NO CORRESPONDE CON LO ESPERADO
					! Si se han recibido datos previos, se envia ACK y la transacción debería terminar
					! ya que se trata de una cancelación temprana
					!
					CALL TEFII.FORMAT.SETPOSSTATE("99")
					!
					If tmpPrevData% Then Begin
						tmpPrevData% = 0
						!
						! 2018-01-23
						! Se debe enviar el ACK al datáfono
						Call APPMGR.COMM.ACCEPT
						!
						CALL TEFII.FUNCT.PREPMSGTOCAJA(FUNNUMBER%)
						CALL TEFII.FUNCT.ADDTRAMA(FUNNUMBER%)
						TRAMA$ = TEFII.FORMAT.GETRESPUESTATOTAL$(TEFII.FUNCT.FTPARAM$(FUNNUMBER%,6))
					Endif Else Begin
						Call refuseTrx
						TRAMA$ = TEFII.FORMAT.GETRESPUESTAPARCIAL$("2","s","")
					Endif
				ENDIF
			Endif Else Begin
				Call refuseTrx
				CALL TEFII.FORMAT.SETPOSSTATE("99")
				If tmpValidate% = 0 Then \
					TRAMA$ = TEFII.FORMAT.GETRESPUESTAPARCIAL$("2","x","") \
				Else \
					TRAMA$ = TEFII.FORMAT.GETRESPUESTAPARCIAL$("2","K","")
			Endif
		Endif
	ENDIF \
	ELSE IF ESTADO$ = "25" THEN \
	BEGIN
		tmpReq$ = TEFII.FORMAT.getPosInput(TRAMA$)
		If Left$(tmpReq$,2) = "XX" Then Begin
			CALL TEFII.FORMAT.SETPOSSTATE("99")
			TRAMA$ = TEFII.FORMAT.GETRESPUESTAPARCIAL$("2","s","")
		Endif Else Begin
			tmpReq$ = Right$(String$(12,"0") + tmpReq$,12)
			Call printDebug("Dcto:" + tmpReq$)
			Call TEFII.FORMAT.SETPOSVARREQUEST$(7,tmpReq$)
			CALL TEFII.FORMAT.SETPOSSTATE("10")
			TRAMA$ = TEFII.FORMAT.GETSOLDISPLAY$("   ENVIANDO DATOS      AL DATAFONO...",1,1,1)
		Endif
	ENDIF \ 
	ELSE IF ESTADO$ = "10" THEN \	! DATA ENTRY INICIO
	BEGIN
		If initializationNeeded% Then Begin
			Call TEFII.FUNCT.setConstants(FUNNUMBER%)
		Endif
		!
		! DATA ENTRY INICIO
		CALL TEFII.FORMAT.SETPOSSTATE("22")
		TRAMA$ = TEFII.FORMAT.GETDATAENTRY$(\
			"8", \
			"01", \
			TEFII.FUNCT.GETDATAENTRY$ \
		)
	ENDIF \
	ELSE IF ESTADO$ = "22" THEN \	! PROCESO2 TRX
	BEGIN
		Call restoreFields		
		! ARMA LA RESPUESTA QUE SOLICITA EL DATAFONO
		CALL TEFII.FUNCT.PREPMSGTODATAF(FUNNUMBER%)
		! SI ES FUNCION 14 NO DEBE RELLENAR LOS CAMPOS VACIOS
		! SI NO SE TRATA DE UNA RECUPERACION ANTEPONE EL ACK AL MENSAJE
		Call printDebug("Formatting fields " + TEFII.FUNCT.FTPARAM$(FUNNUMBER%,1))
		If FUNNUMBER% = 4 Then Begin
			MENSAJEDATAF$ = TEFII.FORMAT.FORMATMSGTODATAF$(TEFII.FUNCT.FTPARAM$(FUNNUMBER%,1),0) \
		Endif Else If TEFII.FUNCT.FUNCTYPE%(FUNNUMBER%) = 2 Then Begin
			! Únicamente envía un ACK
			MENSAJEDATAF$ = Chr$(6)
		Endif Else Begin
			MENSAJEDATAF$ = TEFII.FORMAT.FORMATMSGTODATAF$(TEFII.FUNCT.FTPARAM$(FUNNUMBER%,1),1)
		Endif
		! VUELVE A ABRIR EL PUERTO
		ANSWERSERIAL% = TEFII.FUNCT.OPENPORT%
		If ANSWERSERIAL% <> 0 Then Begin
			! NO SE PUEDE ABRIR EL PUERTO SERIAL
			CALL TEFII.FORMAT.SETPOSSTATE("99")
			TRAMA$ = TEFII.FORMAT.GETRESPUESTAPARCIAL$("2","2","")
		Endif Else Begin
			! ENVIA LA INFORMACION PEDIDA AL DATAFONO
			Call EP.DISPLAY.A.MESSAGE("Pausa " + Str$(EP.CHARS.WAIT%))
			WAIT ; EP.CHARS.WAIT%
			Call EP.DISPLAY.A.MESSAGE("   ENVIANDO DATOS      AL DATAFONO...")
			!
			Call traceApplication("w:" + MENSAJEDATAF$, "TIIFUNC")
			!
			ANSWERSERIAL% = APPMGR.COMM.WRITESERIAL%(EP.EIAP%,MENSAJEDATAF$,TEFII.FUNCT.SERIALTIMEOUT%)
			! CIERRA EL PUERTO
			!CALL APPMGR.COMM.CLOSESERIAL(EP.EIAP%)
			Call TEFII.FUNCT.CLOSEPORT%
			IF ANSWERSERIAL% = 0 THEN \
			BEGIN
				! EL DATAFONO RECIBIO LA INFORMACION SOLICITADA
				CALL TEFII.FORMAT.SETPOSSTATE("23")
				TRAMA$ = TEFII.FORMAT.GETSOLDISPLAY$("     ESPERANDO         AUTORIZACION ....",1,1,1)
			ENDIF \
			ELSE \
			BEGIN
				! NO SE RECIBIO CONFIRMACION DE ENVIO DE LA INFORMACION PEDIDA
				CALL TEFII.FORMAT.SETPOSSTATE("99")	
				!TRAMA$ = TEFII.FORMAT.GETRESPUESTAPARCIAL$("9","3","")
				TRAMA$ = TEFII.FORMAT.GETRESPUESTAPARCIAL$("2","D","")
			ENDIF
		Endif
	ENDIF \
	ELSE IF ESTADO$ = "23" THEN \	! PROCESO3 TRX
	BEGIN
		If applyPreviousPayment% Then Begin
			applyPreviousPayment% = 0
			MENSAJEDATAF$ = getLastSequence
			Call TEFII.FORMAT.SETPOSSTATE("99")
			Call TEFII.FORMAT.PARSEDATAFMESSAGE(MENSAJEDATAF$)
			Call TEFII.FUNCT.PREPMSGTOCAJA( FUNNUMBER% )
			Call TEFII.FUNCT.ADDTRAMA( FUNNUMBER% )
			TRAMA$ = TEFII.FORMAT.GETRESPUESTATOTAL$(TEFII.FUNCT.FTPARAM$(FUNNUMBER%, 6))
		Endif Else Begin
			COUNTER% = 0
			ERRORCOUNTER% = 0
			TRAMA$ = "NP"
			MENSAJEDATAF$ = ""
			tmpContinue% = -1
			WHILE tmpContinue% <> 0 Or (COUNTER% < EP.MAX.TRIES% AND TRAMA$ = "NP") OR (ERRORCOUNTER% < 6 AND TRAMA$ = "@E")
				tmpContinue% = 0
				!
				! VUELVE A ABRIR EL PUERTO PERO ESPERA UN DELAY
				WAIT ; EP.CHARS.WAIT%
				ANSWERSERIAL% = TEFII.FUNCT.OPENPORT%
				If ANSWERSERIAL% <> 0 Then Begin
					MENSAJEDATAF$ = ""
					COUNTER% = EP.MAX.TRIES%
					ERRORCOUNTER% = 6
					CALL TEFII.FORMAT.SETPOSSTATE("99")
				Endif Else Begin
					! ESPERA LA RESPUESTA FINAL DEL DATAFONO
					MENSAJEDATAF$ = APPMGR.COMM.READSERIALACK$(EP.EIAP%,TEFII.FUNCT.FINALTIMEOUT%,1)
					!
					Call traceApplication("r:" + MENSAJEDATAF$, "TIIFUNC")
					!
					! CIERRA EL PUERTO
					!CALL APPMGR.COMM.CLOSESERIAL(EP.EIAP%)
					!Call TEFII.FUNCT.CLOSEPORT%
					! COLOCA EL ESTADO EN 99
					CALL TEFII.FORMAT.SETPOSSTATE("99")
					TRAMA$ = ""
					IF MENSAJEDATAF$ <> "" THEN \
					BEGIN
						IF LEN(MENSAJEDATAF$) >= 4 AND LEFT$(MENSAJEDATAF$,4) = "@err" THEN \
						BEGIN
							! EL DATAFONO REPORTÓ UN ERROR - SE REINTENTA
							TRAMA$ = "@E"
							MENSAJEDATAF$ = ""
							ERRORCOUNTER% = ERRORCOUNTER% + 1
						ENDIF ELSE \
						BEGIN
							! SE RECIBIO CORRECTAMENTE LA RESPUESTA FINAL DEL DATAFONO
							! PARSE DE LA TRAMA DEL DATAFONO
							CALL TEFII.FORMAT.PARSEDATAFMESSAGE(MENSAJEDATAF$)
							!
							! Si en la trama recibida se indica que hay continuación del mensaje
							! se entra en un ciclo hasta que se indique que no hay más continuación
							tmpContinue% = TEFII.FUNCT.ISCONTINUE
							If tmpContinue% Then Begin
								Call TEFII.FUNCT.SAVEPARTIALMSG(MENSAJEDATAF$)
							Endif
							!
							TRAMA$ = TEFII.FUNCT.GETANS	! CAMPO 48 CODIGO DE RESPUESTA
						ENDIF
					ENDIF
					IF TRAMA$ <> "@E" THEN \
					BEGIN
						COUNTER% = COUNTER% + 1
						ERRORCOUNTER% = 0
					ENDIF
					!
					Call TEFII.FUNCT.CLOSEPORT%
				Endif
			WEND
			IF MENSAJEDATAF$ <> "" THEN \
			BEGIN
				! Envía aceptación del mensaje
				!Call APPMGR.COMM.ACCEPT
				TRAMA$ = ""
				IF FUNNUMBER% = 4 THEN \	! SOLICITUD DE ULTIMA TRX
				BEGIN
					FUNNUMBER% = TEFII.FUNCT.GETFNFROMHEADER%(TEFII.FORMAT.GETHEADER$)
					Call printDebug("Recup FUNNUMBER%="+str$(FUNNUMBER%))
					IF FUNNUMBER% > 0 AND TEFII.FUNCT.CHKULTTRX%(RIGHT$(TEFII.FUNCT.FUNCTIONS$(FUNNUMBER%),2)) = 1 THEN \
					BEGIN
						CALL TEFII.FORMAT.SETPOSAPPL(LEFT$(TEFII.FUNCT.FUNCTIONS$(FUNNUMBER%),2))
						CALL TEFII.FORMAT.SETPOSFUNCT(RIGHT$(TEFII.FUNCT.FUNCTIONS$(FUNNUMBER%),2))
					ENDIF \
					ELSE \
					BEGIN
					  CALL TEFII.FORMAT.SETPOSFUNCT(TEFII.FORMAT.GETPOSVARREQUEST$(10))
						CALL TEFII.FORMAT.SETPOSSTATE("24")
						TRAMA$ = TEFII.FORMAT.GETSOLDISPLAY$("TRX NO RECUPERADA",1,1,1)			
					ENDIF
				ENDIF
				IF TRAMA$ = "" THEN \
				BEGIN
					! ARMA LA RESPUESTA PARA LA CAJA
	!				call ep.line.print("prepara rta caja",4100H)
					CALL TEFII.FUNCT.PREPMSGTOCAJA(FUNNUMBER%)
					CALL TEFII.FUNCT.ADDTRAMA(FUNNUMBER%)
					TRAMA$ = TEFII.FORMAT.GETRESPUESTATOTAL$(TEFII.FUNCT.FTPARAM$(FUNNUMBER%,6))
				ENDIF
			ENDIF \
			ELSE \
			BEGIN
				! NO SE RECIBIO RESPUESTA FINAL DEL DATAFONO
				! ARMAR DATA ENTRY DE TIME OUT
				CALL TEFII.FORMAT.SETPOSCODTRX("3")	! CTRL TRX TIME OUT
				TRAMA$ = TEFII.FORMAT.GETDATAENTRY$(\
					"9", \
					"04", \
					TEFII.FUNCT.GETDATAENTRY$ \
				)
			ENDIF
		Endif
	ENDIF \
	ELSE IF ESTADO$ = "24" THEN \	! PROCESO4 TRX
	BEGIN
		! TIME OUT HOST
		CALL TEFII.FORMAT.SETPOSSTATE("99")
		TRAMA$ = TEFII.FORMAT.GETDATAENTRY$(\
			"A", \
			"05", \
			TEFII.FUNCT.GETDATAENTRY$ \
		)
	ENDIF \
	ELSE \
	BEGIN
		CALL TEFII.FORMAT.SETPOSSTATE("99")	
		TRAMA$ = TEFII.FORMAT.GETRESPUESTAPARCIAL$("1","Z","")
	ENDIF
	!
	ESTADO$ = TEFII.FORMAT.GETPOSSTATE$
	If ESTADO$ = "99" Then Begin
		!CALL APPMGR.COMM.CLOSESERIAL(EP.EIAP%)
		portStatus% = 99
		Call TEFII.FUNCT.CLOSEPORT%
	Endif
	TEFII.FUNCT.TRX01$ = TRAMA$
END FUNCTION
!
Function TEFII.FUNCT.GETFINDEX(pApplFunc$) Public
	Integer*2 TEFII.FUNCT.GETFINDEX, tmpAnswer%, tmpCounter%
	String pApplFunc$
	!
	tmpAnswer% = -1
	tmpCounter% = 0
	Call printDebug("TEFII.FUNCT.GETFINDEX(" + pApplFunc$ + ")")
	Call printDebug("TEFII.FUNCT.FCOUNT% = " + Str$(TEFII.FUNCT.FCOUNT%))
	While tmpAnswer% = -1 And tmpCounter% <= TEFII.FUNCT.FCOUNT%
		If TEFII.FUNCT.FUNCTIONS$(tmpCounter%) = pApplFunc$ Then tmpAnswer% = tmpCounter%
		Call printDebug(TEFII.FUNCT.FUNCTIONS$(tmpCounter%) + " vs " + pApplFunc$ + " = " + Str$(tmpAnswer%))
		tmpCounter% = tmpCounter% + 1
	Wend
	!
	TEFII.FUNCT.GETFINDEX = tmpAnswer%
End Function
!
FUNCTION TEFII.FUNCT.APPLKERNEL$(TRAMA$) PUBLIC
	STRING TRAMA$,TEFII.FUNCT.APPLKERNEL$,ANSWER$
	String tmpApplFunc$, tmpAppl$, tmpFunction$
	Integer*1 tmpFuncNo%
	!
	ANSWER$ = LEFT$(TRAMA$,4)
	tmpApplFunc$ = ANSWER$
	tmpAppl$ = Left$(ANSWER$, 2)
	tmpFunction$ = Right$(ANSWER$, 2)
	!
	Call TEFII.FORMAT.setDataAppl(EP.defaultApp$)
	!
	If tmpAppl$ = "85" Then Begin
		IF tmpFunction$ = "11" THEN ANSWER$ = TEFII.FUNCT.TRX01$(TRAMA$,1,-1) \
		ELSE IF tmpFunction$ = "12" OR tmpFunction$ = "14" THEN ANSWER$ = TEFII.FUNCT.TRX01$(TRAMA$,3,-1) \
		ELSE IF tmpFunction$ = "21" THEN ANSWER$ = TEFII.FUNCT.TRX01$(TRAMA$,2,-1) \
		ELSE IF tmpFunction$ = "49" THEN ANSWER$ = TEFII.FUNCT.TRX01$(TRAMA$,4,-1) \
		ELSE IF tmpFunction$ = "51" THEN ANSWER$ = TEFII.FUNCT.TRX01$(TRAMA$,5,-1) \ 
		ELSE IF tmpFunction$ = "02" THEN ANSWER$ = TEFII.FUNCT.TRX01$(TRAMA$,6,-1) \
		ELSE ANSWER$ = ""
	Endif Else Begin
		tmpFuncNo% = TEFII.FUNCT.GETFINDEX(tmpApplFunc$)
		If tmpFuncNo% = -1 Then Begin
			ANSWER$ = ""
		Endif Else Begin
			ANSWER$ = TEFII.FUNCT.TRX01$(TRAMA$,tmpFuncNo%,-1)
		Endif
	Endif
	!
	Call printDebug("Res:"+ANSWER$)
	TEFII.FUNCT.APPLKERNEL$ = ANSWER$
END FUNCTION
!
Sub TEFII.FUNCT.setFieldsToRestore(pFields$) Public
	String pFields$
	!
	fieldsToRestore$ = pFields$
End Sub
!
Sub TEFII.FUNCT.setApplyLastPayment(pValue%) Public
	Integer*1 pValue%
	!
	applyPreviousPayment% = pValue%
End Sub
!